<!doctype html>
<html>

<head>

  <%- include ('../partials/header.ejs') %>
</head>


<body>
  <%- include ('../partials/nav.ejs') %>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM"
      crossorigin="anonymous"></script>

      <div class="container">
        <div class="row justify-content-center">
          <div class="col-12 col-md-8 col-lg-6">
            <div class="card shadow-lg rounded">
              <div class="card-header bg-primary text-white text-center">
                <h3 class="mb-0"><%=data.dataFull.dlg_title %></h3>
              </div>
              <div class="card-body text-center">
                <div class="mb-4">
                  <canvas id="windCanvas" width="200" height="200"></canvas>
                </div>
                <div class="row">
                  <div class="col-12">
                    <h1 class="display-4"><%=data.speed %> knts</h1>
                  </div>
                  <div class="col-12">
                    <h3 class="mb-2"><%=data.dirCard %> ยบ - <%=data.dir %> ยบ </h3>
                    <h4 class="mb-0">gust <%=data.gust %> knts</h4>
                  </div>
                </div>
              </div>
              <div class="card-footer text-muted text-center">
                <%=data.date %>
              </div>
            </div>
          </div>
        </div>
      </div>

    <script>
      function drawWindDirection(degrees) {
        const canvas = document.getElementById('windCanvas');
        const ctx = canvas.getContext('2d');
        const centerX = canvas.width / 2;
        const centerY = canvas.height / 2;
        const arrowLength = 100;
        const arrowWidth = 10;
        const arrowHeadSize = 20;

        ctx.clearRect(0, 0, canvas.width, canvas.height);

        // Draw the circle (optional, for reference)
        ctx.beginPath();
        ctx.arc(centerX, centerY, 80, 0, 2 * Math.PI);
        ctx.strokeStyle = '#ccc';
        ctx.stroke();

        // Convert the direction so the arrow points in the direction the wind is going
        const adjustedDegrees = degrees - 90;

        // Calculate arrow end position
        const endX = centerX + arrowLength * Math.cos(adjustedDegrees * Math.PI / 180);
        const endY = centerY + arrowLength * Math.sin(adjustedDegrees * Math.PI / 180);

        // Draw the arrow line
        ctx.beginPath();
        ctx.moveTo(centerX, centerY);
        ctx.lineTo(endX, endY);
        ctx.lineWidth = arrowWidth;
        ctx.strokeStyle = 'blue'; // Arrow color
        ctx.stroke();

        // Draw the arrowhead
        ctx.beginPath();
        const headLeftX = endX - arrowHeadSize * Math.cos((adjustedDegrees - 150) * Math.PI / 180);
        const headLeftY = endY - arrowHeadSize * Math.sin((adjustedDegrees - 150) * Math.PI / 180);
        const headRightX = endX - arrowHeadSize * Math.cos((adjustedDegrees + 150) * Math.PI / 180);
        const headRightY = endY - arrowHeadSize * Math.sin((adjustedDegrees + 150) * Math.PI / 180);

        ctx.moveTo(endX, endY);
        ctx.lineTo(headLeftX, headLeftY);
        ctx.lineTo(headRightX, headRightY);
        ctx.closePath();
        ctx.fillStyle = 'blue';
        ctx.fill();
      }

      // Example: Draw wind direction at 45 degrees (NE)
      drawWindDirection(<%=data.dir %>);
      // You can change the degrees to represent different directions
      // Example: drawWindDirection(270); for W (270 degrees)
    </script>



    <%- include ('../partials/close.ejs') %>


</body>

</html>